services:
  #  app service
  broker-service:
    build:
      context: ./broker
      dockerfile: ./broker.Dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./auth
      dockerfile: ./auth.Dockerfile
    restart: always
    ports:
      - "8081:8080"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - auth/.env

  logger-service:
    build:
      context: ./logger
      dockerfile: ./logger.Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - logger/.env
  mail:
    build:
      context: ./mail
      dockerfile: ./mail.Dockerfile
    ports:
      - "8083:8080"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - mail/.env
  # Databases
  postgres:
    image: "postgres:latest"
    ports:
      - "5433:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - auth/.env
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:latest"
    ports:
      - "27018:27017"
    env_file:
      - logger/.env
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/mongo/:/data/db/
  # Fake mail service
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
  # RabbitMQ

  rabbitmq:
    image: "rabbitmq:4.0.2-management-alpine"
    ports:
      - "5674:5672"
      - "15673:15672"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
